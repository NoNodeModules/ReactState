{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx"],"names":["contentNode","document","getElementById","ReactDOM","render","module","hot","accept","IssueRow","props","issue","_id","status","owner","created","toDateString","effort","completionDate","title","IssueTable","issueRows","issues","map","IssueList","state","createIssue","bind","loadData","fetch","then","response","ok","json","console","log","data","_metadata","total_count","records","forEach","Date","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat","React","Component","IssueAdd","handleSubmit","e","preventDefault","form","forms","issueAdd","value","IssueFilter"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport IssueList from './IssueList.jsx';\n\nconst contentNode = document.getElementById('contents');\nReactDOM.render(<IssueList />, contentNode);    // Render the component inside the content Node\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport 'whatwg-fetch';\n\nimport IssueAdd from './IssueAdd.jsx';\nimport IssueFilter from './IssueFilter.jsx';\n\nconst IssueRow = (props) => (\n  <tr>\n    <td>{props.issue._id}</td>\n    <td>{props.issue.status}</td>\n    <td>{props.issue.owner}</td>\n    <td>{props.issue.created.toDateString()}</td>\n    <td>{props.issue.effort}</td>\n    <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td>\n    <td>{props.issue.title}</td>\n  </tr>\n)\n\nfunction IssueTable(props) {\n  const issueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue} />)\n  return (\n    <table className=\"bordered-table\">\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Status</th>\n          <th>Owner</th>\n          <th>Created</th>\n          <th>Effort</th>\n          <th>Completion Date</th>\n          <th>Title</th>\n        </tr>\n      </thead>\n      <tbody>{issueRows}</tbody>\n    </table>\n  );\n}\n\nexport default class IssueList extends React.Component {\n  constructor() {\n    super();\n    this.state = { issues: [] };\n\n    this.createIssue = this.createIssue.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData() {\n    fetch('/api/issues').then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          console.log(\"Total count of records:\", data._metadata.total_count);\n          data.records.forEach(issue => {\n            issue.created = new Date(issue.created);\n            if (issue.completionDate)\n              issue.completionDate = new Date(issue.completionDate);\n          });\n          this.setState({ issues: data.records });\n        });\n      } else {\n        response.json().then(error => {\n          alert(\"Failed to fetch issues:\" + error.message)\n        });\n      }\n    }).catch(err => {\n      alert(\"Error in fetching data from server:\", err);\n    });\n  }\n\n  createIssue(newIssue) {\n    fetch('/api/issues', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newIssue),\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n          updatedIssue.created = new Date(updatedIssue.created);\n          if (updatedIssue.completionDate)\n            updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n          const newIssues = this.state.issues.concat(updatedIssue);\n          this.setState({ issues: newIssues });\n        });\n      } else {\n        response.json().then(error => {\n          alert(\"Failed to add issue: \" + error.message)\n        });\n      }\n    }).catch(err => {\n      alert(\"Error in sending data to server: \" + err.message);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Issue Tracker</h1>\n        <IssueFilter />\n        <hr />\n        <IssueTable issues={this.state.issues} />\n        <hr />\n        <IssueAdd createIssue={this.createIssue}/>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","import React from 'react';\n\nexport default class IssueAdd extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var form = document.forms.issueAdd;\n    this.props.createIssue({\n      owner: form.owner.value,\n      title: form.title.value,\n      status: 'New',\n      created: new Date(),\n    });\n    // clear the form for the next input\n    form.owner.value = \"\"; form.title.value = \"\";\n  }\n\n  render() {\n    return (\n      <div>\n        <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\n          <input type=\"text\" name=\"title\" placeholder=\"Title\" />\n          <button>Add</button>\n        </form>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react';\n\nexport default class IssueFilter extends React.Component {\n  render() {\n    return (\n      <div>This is a placeholder for the Issue Filter.</div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx"],"sourceRoot":""}